/* GENERAL */

.formulaire-wrapper {
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    background-color: rgba(103, 122, 135, 0.9);
    height: 100%;
    width: 100%;
    z-index: 1000;
}

.formulaire, .validation {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 90%;
  min-height: 320px;
  max-width: 832px;
  border-radius: 6px;
  box-shadow: 4px 4px 7px 1px rgba(0,0,0,0.5);
}

.formulaire {
    background-color: white;
}

.question__title {
    text-align: center;
    padding: 16px;
}

.question__title p {
    color: #7c7c7c;
}

.question__choices {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    flex: 1;
    width: 100%;
    gap: 16px;
    padding-bottom: 32px;
}

.question__choices--small-card {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    padding-inline: 16px;
    width: 100%;
    flex: 1;
    gap: 8px;
    padding-bottom: 32px;
}

.validation {
    justify-content: center;
    background-color: blue;
    color: white;
}

.validation h1 {
    color: white;
    font-size: 2rem;
}

.validation__image {
    width: 150px;
}

.question__choices__choice, .question__choices__choice--small-card {
    display: flex;
    justify-content: center;
    position: relative;
    width: 45%;
    border: solid 1px #a9b3c6;
    border-radius: 3px;
    text-align: center;
}

.question__choices__choice--small-card {
    justify-self: center;
    width: 100%;
}

label {
    display: flex;
    height: 100%;
    width: 100%;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

label:hover {
    background-color: rgba(109, 109, 109,0.1);
}

label::selection {
    background-color: #d7ebff;
}

label p {
    margin: 0;
    padding-inline: 8px;
}

input {
    padding-left: 16px;
}

input[type="radio"] {
    position: absolute;
    top: 1px;
    left: 1px;
    cursor: pointer;
    opacity: 1;
}

input[type="number"], input[type="text"], input[type="tel"], input[type="email"], input[type="date"], input[type="time"], input[type="textarea"] {
    border: solid 1px black;
    border-radius: 3px;
    height: 48px;
    width: 90%;
    max-width: 720px;
    outline: none;
    border-color: #4a85ef;
    box-shadow: 0 0 0 2px rgb(74 133 239 / 30%);
}

input[type="number"]::placeholder, input[type="text"]::placeholder, input[type="tel"]::placeholder, input[type="email"]::placeholder, input[type="date"]::placeholder, input[type="time"]::placeholder, input[type="textarea"]::placeholder {
    color: #c0cad5;
}

.radio-image {
    width: 75px;
    height: 75px;
}

.question-footer {
    position: relative;
    display: flex;
    justify-content: flex-end;   
    align-items: center;
    background-color: blue;
    width: 100%;
    height: 60px;
    border-radius: 0 0 6px 6px;
}

.error {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0 , 0, 0, 0.5);
    color: white;
    padding: 8px 16px;
    border-radius: 3px;
  }

.prev, .next, .submit {
  display: flex;
  align-items: center;
  height: 100%;
  background-color: blue;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  color: white;
  text-transform: uppercase;
  cursor: pointer;
}
.prev p, .next p, .submit p {
  margin: 0!important
}

.arrow {
  align-self: center;
  width: 28px;
  padding: 8px;
}

.closeButton {
    position: absolute;
    top: 16px;
    right: 16px;
    cursor: pointer;
}

.closeButton img {
    width: 20px;
}

/* Style question 7 - 11 */
.label--code-postal, .label--tel {
    font-size: 12px;
    color: #7c7c7c;
    width: 90%;
    max-width: 736px;
}
/* Style question 13 */
.container__date-picker {
    display: flex;
    width: 90%;
    gap: 32px;
    margin-bottom: 32px;
}

@media (max-width: 375px) {
    .container__date-picker {
        flex-direction: column;
    }
}

/* Animation logo validation */

.circleStroke {			
    stroke-dasharray: 200;
    stroke-dashoffset: 200;
    animation: drawStrokeCircle 1.5s cubic-bezier(0,.97,.92,.92) forwards;
}

@keyframes drawStrokeCircle {
    to {
        stroke-dashoffset: 0;
    }
}
    
.circleBg {
    opacity: 0;
    /* animation: drawBgCircle 0.5s cubic-bezier(.15,.72,.63,.87) forwards 1.5s; */
}

@keyframes drawBgCircle {
    to {
        opacity: 1
    }
}
    
.circleShadow {
    opacity: 0;
    /* animation: drawShadowCircle 0.5s cubic-bezier(.15,.72,.63,.87) forwards 1.6s;    */
}

@keyframes drawShadowCircle {
    to {
        opacity: 0.15
    }
}

/* cacher la modale */
.hide {
    visibility: hidden;
}
