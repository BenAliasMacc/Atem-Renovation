{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Desktop\\\\atem-main\\\\src\\\\components\\\\Questions\\\\Components\\\\Questions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport './Questions.css';\nimport questionsData from '../Data/data.json';\nimport { Footer } from './Footer';\nimport Compteur from './Compteur';\nimport closeButton from \"../Assets/closeButton.svg\";\nimport ReactDatePicker from 'react-datepicker';\nimport DateTime from './DateTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = ({\n  setOpenModalForm,\n  setOpenModalValidation\n}) => {\n  _s();\n\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const data = questionsData.data[activeQuestion];\n  const length = data.choices.length;\n  const numberOfQuestions = questionsData.data.length;\n  const [selected, setSelected] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [error, setError] = useState('');\n  const radiosWrapper = useRef();\n  console.log(answer);\n  useEffect(() => {\n    const findCheckedInput = data.inputType === \"radio\" && radiosWrapper.current.querySelector('input:checked');\n\n    if (findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  }, [data]);\n\n  const changeHandler = e => {\n    setSelected(e.target.value);\n\n    if (error) {\n      setError('');\n    }\n  };\n\n  const closeModal = () => {\n    setOpenModalForm(false);\n  };\n\n  const test = e => {\n    e.stopPropagation();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setOpenModalForm(false);\n    setOpenModalValidation(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulaire-wrapper\",\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formulaire\",\n      onSubmit: e => handleSubmit(e),\n      onClick: test,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.titre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), data.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), data.inputType === \"radio\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${length === 2 ? 'question__choices' : 'question__choices--small-card'} control`,\n        ref: radiosWrapper,\n        children: data.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${length === 2 ? 'question__choices__choice' : 'question__choices__choice--small-card'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: choice.name,\n            children: [choice.image && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"radio-image\",\n              src: choice.image,\n              alt: choice.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: choice.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"radio\",\n            type: \"radio\",\n            name: \"answer\",\n            id: choice.name,\n            value: choice.name,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 48\n      }, this), data.inputType !== \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: data.inputs[0].inputType,\n          placeholder: data.inputs[0].placeholder,\n          onChange: changeHandler,\n          value: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), activeQuestion === data.length - 2, /*#__PURE__*/_jsxDEV(Footer, {\n        data: data,\n        numberOfQuestions: numberOfQuestions,\n        error: error,\n        setError: setError,\n        activeQuestion: activeQuestion,\n        onSetActiveQuestion: setActiveQuestion,\n        selected: selected,\n        setSelected: setSelected,\n        setAnswer: setAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Compteur, {\n        activeQuestion: activeQuestion,\n        numberOfQuestions: numberOfQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closeButton\",\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"test\",\n          src: closeButton,\n          alt: \"fermeture modale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Questions, \"0V0HVSMawUo7259sOHzvVag9Svk=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/raymo/Desktop/atem-main/src/components/Questions/Components/Questions.jsx"],"names":["React","useRef","useState","useEffect","questionsData","Footer","Compteur","ReactDatePicker","DateTime","Questions","setOpenModalForm","setOpenModalValidation","activeQuestion","setActiveQuestion","data","length","choices","numberOfQuestions","selected","setSelected","answer","setAnswer","error","setError","radiosWrapper","console","log","findCheckedInput","inputType","current","querySelector","checked","changeHandler","e","target","value","closeModal","test","stopPropagation","handleSubmit","preventDefault","titre","description","map","choice","index","name","image","inputs","placeholder","closeButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport './Questions.css'\r\nimport questionsData from '../Data/data.json'\r\nimport { Footer } from './Footer'\r\nimport Compteur from './Compteur'\r\nimport closeButton from '../Assets/closeButton.svg'\r\nimport ReactDatePicker from 'react-datepicker'\r\nimport DateTime from './DateTime'\r\n\r\nconst Questions = ({setOpenModalForm, setOpenModalValidation}) => {\r\n\r\n    const [activeQuestion, setActiveQuestion] = useState(0);\r\n    const data = questionsData.data[activeQuestion]\r\n    const length = data.choices.length\r\n    const numberOfQuestions = questionsData.data.length\r\n\r\n    const [selected, setSelected] = useState('');\r\n    const [answer, setAnswer] = useState('')\r\n    const [error, setError] = useState('');\r\n    const radiosWrapper = useRef();\r\n\r\n    console.log(answer);\r\n\r\n    useEffect(() => {\r\n      const findCheckedInput = data.inputType === \"radio\" && radiosWrapper.current.querySelector('input:checked');\r\n      if(findCheckedInput) {\r\n        findCheckedInput.checked = false;\r\n      }\r\n    }, [data]);\r\n    \r\n    const changeHandler = (e) => {\r\n        setSelected(e.target.value);\r\n        if(error) {\r\n            setError('');\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setOpenModalForm(false)\r\n    };\r\n\r\n    const test = e => {\r\n        e.stopPropagation()\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setOpenModalForm(false)\r\n        setOpenModalValidation(true)\r\n    }\r\n\r\n    return (\r\n        <div className='formulaire-wrapper' onClick={closeModal}>\r\n            <form className='formulaire' onSubmit={e => handleSubmit(e)} onClick={test}> \r\n                \r\n                <div className='question__title'>\r\n                    <h2>{data.titre}</h2>\r\n                    {data.description && <p>{data.description}</p>}\r\n                </div>\r\n\r\n                {/* input radio */}\r\n                {data.inputType === \"radio\" && <div className={`${length === 2 ? 'question__choices' : 'question__choices--small-card'} control`} ref={radiosWrapper}>\r\n                    {data.choices.map((choice, index) => (\r\n                        <div className={`${length === 2 ? 'question__choices__choice' : 'question__choices__choice--small-card'}`} key={index}>\r\n                            <label htmlFor={choice.name}>\r\n                                {choice.image && <img className='radio-image' src={choice.image} alt={choice.name}/>}\r\n                                <p>{choice.name}</p>\r\n                            </label>\r\n                            <input className='radio' type=\"radio\" name=\"answer\" id={choice.name} value={choice.name} onChange={changeHandler}/>\r\n                        </div>\r\n                    ))}\r\n                </div>}\r\n\r\n                {data.inputType !== \"radio\" && (\r\n                    <>\r\n                        <input type={data.inputs[0].inputType} placeholder={data.inputs[0].placeholder} onChange={changeHandler} value={selected}/>\r\n                    </>\r\n                )}\r\n\r\n                {\r\n                activeQuestion === data.length - 2 \r\n\r\n                }\r\n                \r\n                <Footer data={data} numberOfQuestions={numberOfQuestions} error={error} setError={setError} activeQuestion={activeQuestion} onSetActiveQuestion={setActiveQuestion} selected={selected} setSelected={setSelected} setAnswer={setAnswer}/>\r\n\r\n                <Compteur activeQuestion={activeQuestion} numberOfQuestions={numberOfQuestions}/>\r\n\r\n                <div className='closeButton' onClick={closeModal}><img className='test' src={closeButton} alt='fermeture modale'/></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions"]},"metadata":{},"sourceType":"module"}