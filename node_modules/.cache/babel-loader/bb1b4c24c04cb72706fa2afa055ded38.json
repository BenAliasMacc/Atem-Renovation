{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Desktop\\\\atem-main\\\\src\\\\components\\\\Questions\\\\Components\\\\test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  let {\n    data,\n    onAnswerUpdate,\n    numberOfQuestions,\n    activeQuestion,\n    onSetActiveQuestion,\n    onSetStep\n  } = _ref;\n  const [selected, setSelected] = useState('');\n  const [error, setError] = useState('');\n  const radiosWrapper = useRef();\n  useEffect(() => {\n    const findCheckedInput = radiosWrapper.current.querySelector('input:checked');\n\n    if (findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  }, [data]);\n\n  const changeHandler = e => {\n    setSelected(e.target.value);\n\n    if (error) {\n      setError('');\n    }\n  };\n\n  const nextClickHandler = e => {\n    if (selected === '') {\n      return setError('Please select one option!');\n    }\n\n    onAnswerUpdate(prevState => [...prevState, {\n      q: data.question,\n      a: selected\n    }]);\n    setSelected('');\n\n    if (activeQuestion < numberOfQuestions - 1) {\n      onSetActiveQuestion(activeQuestion + 1);\n    } else {\n      onSetStep(3);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-5\",\n          children: data.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          ref: radiosWrapper,\n          children: data.choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio has-background-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"answer\",\n              value: choice,\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), choice]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"has-text-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-link is-medium is-fullwidth mt-4\",\n          onClick: nextClickHandler,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"+/ZssqJjrsrT42+AEGAK3G2o/Mc=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/raymo/Desktop/atem-main/src/components/Questions/Components/test.jsx"],"names":["React","useState","useEffect","useRef","Question","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","selected","setSelected","error","setError","radiosWrapper","findCheckedInput","current","querySelector","checked","changeHandler","e","target","value","nextClickHandler","prevState","q","question","a","choices","map","choice","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Question = ({ data, onAnswerUpdate, numberOfQuestions, activeQuestion, onSetActiveQuestion, onSetStep }) => {\r\n  const [selected, setSelected] = useState('');\r\n  const [error, setError] = useState('');\r\n  const radiosWrapper = useRef();\r\n\r\n  useEffect(() => {\r\n    const findCheckedInput = radiosWrapper.current.querySelector('input:checked');\r\n    if(findCheckedInput) {\r\n      findCheckedInput.checked = false;\r\n    }\r\n  }, [data]);\r\n\r\n  const changeHandler = (e) => {\r\n    setSelected(e.target.value);\r\n    if(error) {\r\n      setError('');\r\n    }\r\n  }\r\n  \r\n  const nextClickHandler = (e) => {\r\n    if(selected === '') {\r\n      return setError('Please select one option!');\r\n    }\r\n    onAnswerUpdate(prevState => [...prevState, { q: data.question, a: selected }]);\r\n    setSelected('');\r\n    if(activeQuestion < numberOfQuestions - 1) {\r\n      onSetActiveQuestion(activeQuestion + 1);\r\n    }else {\r\n      onSetStep(3);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h2 className=\"mb-5\">{data.question}</h2>\r\n          <div className=\"control\" ref={radiosWrapper}>\r\n            {data.choices.map((choice, i) => (\r\n              <label className=\"radio has-background-light\" key={i}>\r\n                <input type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler} />\r\n                {choice}\r\n              </label>\r\n            ))}\r\n          </div>\r\n          {error && <div className=\"has-text-danger\">{error}</div>}\r\n          <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}