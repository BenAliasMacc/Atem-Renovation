{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Desktop\\\\atem-main\\\\src\\\\components\\\\Questions\\\\Components\\\\Questions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport './Questions.css';\nimport questionsData from '../Data/data.json';\nimport { Footer } from './Footer';\nimport Compteur from './Compteur';\nimport closeButton from \"../Assets/closeButton.svg\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = ({\n  setOpen\n}) => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const data = questionsData.data[activeQuestion];\n  const length = data.choices.length;\n  const numberOfQuestions = questionsData.data.length;\n  const [selected, setSelected] = useState('');\n  const [error, setError] = useState('');\n  const [inputValue, setInputValue] = useState({\n    input1: \"\",\n    input2: \"\"\n  });\n  const radiosWrapper = useRef();\n  useEffect(() => {\n    const findCheckedInput = data.inputType === \"radio\" && radiosWrapper.current.querySelector('input:checked');\n\n    if (findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  }, [data]);\n  const [answer, setAnswer] = useState({\n    question1: '',\n    question2: '',\n    question3: '',\n    question4: '',\n    question5: '',\n    question6: '',\n    question7: '',\n    question8: '',\n    question9: '',\n    question10: '',\n    question11: '',\n    question12: '',\n    question13: ''\n  });\n\n  const changeRadioHandler = e => {\n    setSelected(e.target.value);\n\n    if (error) {\n      setError('');\n    }\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  cosnt; // const changeInputHandler = (e) => {\n  //     setInputValue([\n  //         {input: e.target.value},\n  //         {input: e.target.value}\n  //     ]);\n  //     if(error) {\n  //         setError('');\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulaire-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formulaire\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.titre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), data.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), data.inputType === \"radio\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${length === 2 ? 'question__choices' : 'question__choices--small-card'} control`,\n        ref: radiosWrapper,\n        children: data.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${length === 2 ? 'question__choices__choice' : 'question__choices__choice--small-card'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: choice.name,\n            children: [choice.image && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"radio-image\",\n              src: choice.image,\n              alt: choice.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: choice.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"radio\",\n            type: \"radio\",\n            name: \"answer\",\n            id: choice.name,\n            value: choice.name,\n            ...register(data.titre)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 48\n      }, this), data.inputType !== \"radio\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: data.inputs[0].inputType,\n          placeholder: data.inputs[0].placeholder,\n          ...register(data.titre),\n          value: inputValue.input1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), data.inputs[1] && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: data.inputs[1].inputType,\n          placeholder: data.inputs[1].placeholder,\n          ...register(data.titre),\n          value: inputValue.input2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {\n        data: data,\n        numberOfQuestions: numberOfQuestions,\n        error: error,\n        setError: setError,\n        activeQuestion: activeQuestion,\n        onSetActiveQuestion: setActiveQuestion,\n        selected: selected,\n        setSelected: setSelected,\n        inputValue: inputValue,\n        setInputValue: setInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Compteur, {\n        activeQuestion: activeQuestion,\n        numberOfQuestions: numberOfQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closeButton\",\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeButton,\n          alt: \"fermeture modale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Questions, \"wdJomf5pNP547QlCN9C9lcX7WSQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/raymo/Desktop/atem-main/src/components/Questions/Components/Questions.jsx"],"names":["React","useRef","useState","useEffect","questionsData","Footer","Compteur","useForm","Questions","setOpen","register","handleSubmit","activeQuestion","setActiveQuestion","data","length","choices","numberOfQuestions","selected","setSelected","error","setError","inputValue","setInputValue","input1","input2","radiosWrapper","findCheckedInput","inputType","current","querySelector","checked","answer","setAnswer","question1","question2","question3","question4","question5","question6","question7","question8","question9","question10","question11","question12","question13","changeRadioHandler","e","target","value","closeModal","cosnt","titre","description","map","choice","index","name","image","inputs","placeholder","closeButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport './Questions.css'\r\nimport questionsData from '../Data/data.json'\r\nimport { Footer } from './Footer'\r\nimport Compteur from './Compteur'\r\nimport closeButton from '../Assets/closeButton.svg'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst Questions = ({setOpen}) => {\r\n\r\n    \r\n    const { register, handleSubmit } = useForm()\r\n\r\n    const [activeQuestion, setActiveQuestion] = useState(0);\r\n    const data = questionsData.data[activeQuestion]\r\n    const length = data.choices.length\r\n    const numberOfQuestions = questionsData.data.length\r\n\r\n    const [selected, setSelected] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [inputValue, setInputValue] = useState({\r\n        input1: \"\",\r\n        input2:\"\"\r\n    })\r\n    const radiosWrapper = useRef();\r\n  \r\n    \r\n\r\n    useEffect(() => {\r\n      const findCheckedInput = data.inputType === \"radio\" && radiosWrapper.current.querySelector('input:checked');\r\n      if(findCheckedInput) {\r\n        findCheckedInput.checked = false;\r\n      }\r\n    }, [data]);\r\n\r\n    const [answer, setAnswer] = useState({\r\n        question1: '',\r\n        question2: '',\r\n        question3: '',\r\n        question4: '',\r\n        question5: '',\r\n        question6: '',\r\n        question7: '',\r\n        question8: '',\r\n        question9: '',\r\n        question10: '',\r\n        question11: '',\r\n        question12: '',\r\n        question13: ''\r\n\r\n    })\r\n  \r\n    const changeRadioHandler = (e) => {\r\n        setSelected(e.target.value);\r\n        if(error) {\r\n            setError('');\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setOpen(false)\r\n    };\r\n\r\n    cosnt \r\n\r\n    // const changeInputHandler = (e) => {\r\n    //     setInputValue([\r\n    //         {input: e.target.value},\r\n    //         {input: e.target.value}\r\n    //     ]);\r\n    //     if(error) {\r\n    //         setError('');\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className='formulaire-wrapper'>\r\n            <form className='formulaire'>\r\n                <div className='question__title'>\r\n                    <h2>{data.titre}</h2>\r\n                    {data.description && <p>{data.description}</p>}\r\n                </div>\r\n\r\n                {/* input radio */}\r\n                {data.inputType === \"radio\" && <div className={`${length === 2 ? 'question__choices' : 'question__choices--small-card'} control`} ref={radiosWrapper}>\r\n                    {data.choices.map((choice, index) => (\r\n                        <div className={`${length === 2 ? 'question__choices__choice' : 'question__choices__choice--small-card'}`} key={index}>\r\n                            <label htmlFor={choice.name}>\r\n                                {choice.image && <img className='radio-image' src={choice.image} alt={choice.name}/>}\r\n                                <p>{choice.name}</p>\r\n                            </label>\r\n                            <input className='radio' type=\"radio\" name=\"answer\" id={choice.name} value={choice.name} {...register(data.titre)} />\r\n                        </div>\r\n                    ))}\r\n                </div>}\r\n\r\n                {/* input type text, number */}\r\n                {/*data.inputType !== \"radio\" && data.inputs.map((element, index) => (\r\n                        <input className='test' type={element.inputType} placeholder={element.placeholder} key={index}/>\r\n                ))*/}\r\n                {data.inputType !== \"radio\" && (\r\n                    <>\r\n                        <input type={data.inputs[0].inputType} placeholder={data.inputs[0].placeholder} {...register(data.titre)} value={inputValue.input1} />\r\n                        {data.inputs[1] && <input type={data.inputs[1].inputType} placeholder={data.inputs[1].placeholder} {...register(data.titre)} value={inputValue.input2}/>}\r\n                    </>\r\n                )}\r\n                \r\n                <Footer data={data} numberOfQuestions={numberOfQuestions} error={error} setError={setError} activeQuestion={activeQuestion} onSetActiveQuestion={setActiveQuestion} selected={selected} setSelected={setSelected} inputValue={inputValue} setInputValue={setInputValue}/>\r\n\r\n                <Compteur activeQuestion={activeQuestion} numberOfQuestions={numberOfQuestions}/>\r\n\r\n                <div className='closeButton' onClick={closeModal}><img src={closeButton} alt='fermeture modale'/></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions"]},"metadata":{},"sourceType":"module"}